# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    index   index.html index.htm;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream registry {
        # The link name of your registry
        server docker-registry:5000;
    }

     # Non-SSL
    server {
        listen 80;

        # Pass on client details
        proxy_set_header Host $http_host;
        proxy_set_header X-Real_IP $remote_addr;

        # Disable image upload limits (e.g. HTTP 413)
        client_max_body_size 0;
        chunked_transfer_encoding on;

        # Serve the frontend-files from here
        root /var/www/docker-registry/frontend;

        # Serve Docker Repo from here
        location /v1/ {
            proxy_pass http://registry;
        }
    }

# Use this for SSL version
#    # Redirect HTTP requests to HTTPS
#    server {
#        listen 80;
#        server_name my_server; # Set your server name
#        return 301 https://$server_name$request_uri;
#    }
#
#    # SSL Site
#    server {
#        listen 443;
#
#        ssl on;
#        ssl_certificate /etc/ssl/nginx/my_server.crt
#        ssl_certificate_key /etc/ssl/nginx/ssl/my_server.key
#
#        # Pass on client details
#        proxy_set_header Host $http_host;
#        proxy_set_header X-Real_IP $remote_addr;
#
#        # Disable image upload limits (e.g. HTTP 413)
#        client_max_body_size 0;
#        chunked_transfer_encoding on;
#
#
#        # Serve the frontend-files from here
#        root /var/www/docker-registry/frontend;
#
#        # Serve Docker Repo from here
#        location /v1/ {
#            proxy_pass http://registry;
#        }
#    }
}